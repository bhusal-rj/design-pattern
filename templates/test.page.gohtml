{{template "base" .}}


{{define "content"}}
<div class="container">
	<div class="row">
		<div class="col">
			<h1 class="mt-3">Design Patterns in Go</h1>
			<hr>
			<h3>Factory</h3>
			<div>
				<button  id="dog-factory-btn" class="btn btn-outline-secondary">Get a dog from factory</button>
				<button  id="cat-factory-btn" class="btn btn-outline-secondary">Get a cat from factory</button>
			</div>
			<div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
				<pre id="factory-output"><span class="text-muted">Nothing received yet...</span></pre>
			</div>

			<hr class="mt-4">
			<h3 class="mt-3">Abstract Factory</h3>
			<div>
				<button  id="dog-abstract-factory-btn" class="btn btn-outline-secondary">Get a dog from abstract Factory</button>
				<button  id="cat-abstract-factory-btn" class="btn btn-outline-secondary">Get a cat from abstract Factory</button>
			</div>
			<div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
				<pre id="abstract-factory-output"><span class="text-muted">Nothing received yet...</span></pre>
			</div>
			<hr class="mt-4">
			<h3 class="mt-3">Builder Pattern</h3>
			<div>
				<button id="dog-builder-btn" class="btn btn-outline-secondary">Build a dog</button>
				<button id="cat-builder-btn" class="btn btn-outline-secondary">Build a cat</button>
			</div>
			<div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
				<pre id="builder-output"><span class="text-muted">Nothing received yet...</span></pre>
			</div>
		</div>
	</div>
</div>

{{end}}

{{define "js"}}
<script>
let dogFactoryButton=document.getElementById("dog-factory-btn")
let catFactoryButton=document.getElementById("cat-factory-btn")
let dogAbstractFactoryButton=document.getElementById("dog-abstract-factory-btn")
let catAbstractFactoryButton=document.getElementById("cat-abstract-factory-btn")
let factoryOutput=document.getElementById("factory-output")
let abstractFactoryOutput=document.getElementById("abstract-factory-output")
let catBuilderButton=document.getElementById("cat-builder-btn")
let dogBuilderButton=document.getElementById("dog-builder-btn")
let builderOutput=document.getElementById("builder-output")

document.addEventListener("DOMContentLoaded",function(){
	dogFactoryButton.addEventListener("click",function(){
		fetch("/api/dog-from-factory")
		.then((response)=>response.json())
		.then((data)=>{
			if(data.error){
				factoryOutput.innerHTML=data.error;
			}else{
				factoryOutput.innerHTML=JSON.stringify(data,undefined,4)
			}
		})
	})
	
	catFactoryButton.addEventListener("click",function(){
		fetch("/api/cat-from-factory")
		.then((response)=>response.json())
		.then((data)=>{
			if(data.error){
				factoryOutput.innerHTML=data.error;
			}else{
				factoryOutput.innerHTML=JSON.stringify(data,undefined,4)
			}
		})
	})
	dogAbstractFactoryButton.addEventListener("click",function(){
		fetch("/api/dog-from-abstract-factory")
		.then((response)=>response.json())
		.then((data)=>{
			if(data.error){
				abstractFactoryOutput.innerHTML=data.error;
			}else{
				abstractFactoryOutput.innerHTML=JSON.stringify(data,undefined,4)
			}
		})
	})
	catAbstractFactoryButton.addEventListener("click",function(){
		fetch("/api/cat-from-abstract-factory")
		.then((response)=>response.json())
		.then((data)=>{
			if(data.error){
				abstractFactoryOutput.innerHTML=data.error;
			}else{
				abstractFactoryOutput.innerHTML=JSON.stringify(data,undefined,4)
			}
		})
	})
	catBuilderButton.addEventListener("click",function(){
		fetch("/api/cat-from-builder")
		.then((response)=>response.json())
		.then((data)=>{
			if(data.error){
				builderOutput.innerHTML=data.error;
			}else{
				builderOutput.innerHTML=JSON.stringify(data,undefined,4)
			}
		})
	})
	dogBuilderButton.addEventListener("click",function(){
		fetch("/api/dog-from-builder")
		.then((response)=>response.json())
		.then((data)=>{
			if(data.error){
				builderOutput.innerHTML=data.error;
			}else{
				builderOutput.innerHTML=JSON.stringify(data,undefined,4)
			}
		})
	})
})

</script>
{{end}}
